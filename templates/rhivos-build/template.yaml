apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: rhivos-build-template
  title: Build RHIVOS Image
  description: Build the Red Hat In-Vehicle OS
  tags:
    - automotive
    - rhivos
spec:
  owner: automotive
  type: service

  parameters:
    - title: Provide Project Information
      required:
        - artifact_id
        - manifest_name
        - manifest_location
      properties:
        artifact_id:
          title: Artifact Id
          type: string
          default: devel-build
          maxLength: 40
          pattern: "^([a-zA-Z][a-zA-Z0-9]*)(-[a-zA-Z0-9]+)*$"
          description: The unique ID used for creating assets.
        description:
          title: Description
          type: string
          default: RHIVOS development image
          description: Help others understand what this RHIVOS build is for.
        manifest_name:
          title: Manifest
          type: string
          default: devel
          pattern: "^([a-zA-Z][a-zA-Z0-9]*)(-[a-zA-Z0-9]+)*$"
          description: Name of the manifest file
          ui:help: "Hint: without the .yaml extension"
        manifest_location:
          title: Manifest Location
          type: string
          default: ./manifests
          description: Manifest file location

    - title: Provide RHIVOS Build Information
      required:
        - distro
        - arch
        - target
        - mode
        - export_format
      properties:
        distro:
          title: Distro
          type: string
          default: autosd
          enum:
            - autosd
            - cs9
        arch:
          title: Architecture
          type: string
          default: aarch64
          enum:
            - aarch64
            - x86_64
        target:
          title: Target
          type: string
          default: rpi4
          enum:
            - rpi4
            - qemu
        mode:
          title: Package Mode
          type: string
          default: package
          enum:
            - package
            - image
        export_format:
          title: Export Format
          type: string
          default: image
          enum:
            - image
            - qcow2
            - container

    - title: Provide Build Environment Information
      required:
        - cluster_id
        - base_domain
        - repo
      properties:
        cluster_id:
          title: Cluster ID
          type: string
          default: zgzkk
          ui:help: "Hint: find the base domain in the URL above"
        base_domain:
          title: Cluster Base Domain
          type: string
          description: Base domain of the cluster, e.g. sandbox2007.opentlc.com
          default: sandbox2007.opentlc.com
          ui:help: "Hint: find the base domain in the URL above"
        repo:
          title: Repository Location
          type: object
          properties:
            owner:
              title: Repo Owner Group
              type: string
              description: Your SCM host organization/group
              default: development
              enum:
                - development

    - title: Provide Artefact Registry Information
      required:
        - image_organization
        - image_tag
      properties:
        image_organization:
          title: Organization
          type: string
          description: Name of the Quay Organization
          default: quayadmin
        image_tag:
          title: Image Tag
          default: latest
          type: string
          description: Build Image tag

  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./skeleton
        copyWithoutTemplating:
          - .github/workflows/*
        values:
          artifact_id: ${{ parameters.artifact_id }}
          description: ${{ parameters.description }}
          manifest_name: ${{ parameters.manifest_name }}
          manifest_location: ${{ parameters.manifest_location }}

          distro: ${{ parameters.distro }}
          arch: ${{ parameters.arch }}
          target: ${{ parameters.target }}
          mode: ${{ parameters.mode }}
          export_format: ${{ parameters.export_format }}

          namespace: ${{ parameters.artifact_id }}-dev
          owner: ${{ user.entity.metadata.name }}

          # cluster-zgzkk.zgzkk.sandbox2007.opentlc.com
          #cluster: .apps.${{ parameters.base_domain }}
          cluster: .apps.cluster-${{ parameters.cluster_id }}.${{ parameters.cluster_id }}.${{ parameters.base_domain }}
          # gitlab-gitlab.apps.cluster-
          repo_url: gitlab-gitlab.apps.cluster-${{ parameters.cluster_id }}.${{ parameters.cluster_id }}.${{ parameters.base_domain }}
          repo_destination: ${{ parameters.repo.owner }}/${{ parameters.artifact_id }}
          quay_destination: ${{ parameters.image_organization}}/${{ parameters.artifact_id }}

    - id: publish
      name: Publish Source
      action: publish:gitlab
      input:
        repoUrl: "${{ values.repo_url }}?owner=${{ parameters.repo.owner }}&repo=${{parameters.artifact_id}}"
        defaultBranch: main
        repoVisibility: public

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"

    - id: template-gitops-deployment
      name: Generating Deployment Resources
      action: fetch:template
      input:
        url: ./manifests
        copyWithoutTemplating: []
        values:
          artifact_id: ${{ parameters.artifact_id }}
          description: ${{ parameters.description }}
          manifest_name: ${{ parameters.manifest_name }}
          manifest_location: ${{ parameters.manifest_location }}

          distro: ${{ parameters.distro }}
          arch: ${{ parameters.arch }}
          target: ${{ parameters.target }}
          mode: ${{ parameters.mode }}
          export_format: ${{ parameters.export_format }}

          user: ${{ user.entity.metadata.name }}
          git_owner: ${{ parameters.repo.owner }}

          cluster: .apps.cluster-${{ parameters.cluster_id }}.${{ parameters.cluster_id }}.${{ parameters.base_domain }}

          source_repository: "https://gitlab-gitlab.apps.cluster-${{ parameters.cluster_id }}.${{ parameters.cluster_id }}.${{ parameters.base_domain }}/${{ parameters.repo.owner }}/${{parameters.artifact_id}}.git"
          git_repository: "https://gitlab-gitlab.apps.cluster-${{ parameters.cluster_id }}.${{ parameters.cluster_id }}.${{ parameters.base_domain }}/${{ parameters.repo.owner }}/${{parameters.artifact_id}}-gitops.git"

          repository_name: ${{parameters.artifact_id}}
          repository_host: gitlab-gitlab.apps.cluster-${{ parameters.cluster_id }}.${{ parameters.cluster_id }}.${{ parameters.base_domain }}

          image_registry: quay
          image_organization: ${{ parameters.image_organization }}
          image_host: quay-${{ parameters.cluster_id }}.apps.cluster-${{ parameters.cluster_id }}.${{ parameters.cluster_id }}.${{ parameters.base_domain }}
          image_name: ${{ parameters.artifact_id }}
          image_tag: ${{ parameters.image_tag }}

        targetPath: ./tenant-gitops

    - id: publish-gitops
      name: Publishing GitOps Code
      action: publish:gitlab
      input:
        repoUrl: "gitlab-gitlab.apps.cluster-${{ parameters.cluster_id }}.${{ parameters.cluster_id }}.${{ parameters.base_domain }}?owner=${{ parameters.repo.owner }}&repo=${{parameters.artifact_id}}-gitops"
        sourcePath: ./tenant-gitops
        defaultBranch: main
        repoVisibility: public

    - id: create-gitops-resources
      name: Create GitOps Resources
      action: argocd:create-resources
      input:
        appName: "${{ parameters.artifact_id }}-bootstrap"
        argoInstance: main
        namespace: janus-argocd
        repoUrl: https://gitlab-gitlab.apps.cluster-${{ parameters.cluster_id }}.${{ parameters.cluster_id }}.${{ parameters.base_domain }}/${{ parameters.repo.owner }}/${{ parameters.artifact_id }}-gitops.git
        path: "gitops/"

  output:
    links:
      - title: Source Code Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open Component in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
